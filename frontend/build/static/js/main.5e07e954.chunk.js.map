{"version":3,"sources":["components/Header.js","images/pencil.svg","images/plus.svg","contexts/CurrentUserContext.js","components/Profile.js","components/Card.js","components/Cards.js","components/Main.js","components/Footer.js","components/PopupWithImage.js","utils/api.js","components/Popup.js","components/Form.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","utils/auth.js","images/success.svg","images/error.svg","components/InfoToolTip.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","history","useHistory","location","useLocation","buttonText","pathname","className","userEmail","onClick","loggedIn","onSignOut","push","CurrentUserContext","React","createContext","Profile","useContext","name","about","avatar","onEditAvatar","src","pencil","alt","onEditProfile","onAddPlace","plus","Card","_id","isOwn","card","owner","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onCardClick","onCardDelete","onLikeClick","length","Cards","cards","map","onCardLike","Main","Footer","PopupWithImage","type","onClose","api","apiKey","baseUrl","this","headers","authorization","url","method","body","fetch","then","res","ok","json","Promise","reject","_getResponseData","obj","JSON","stringify","id","all","getUserInfo","getInitialCards","addALike","deleteLike","Popup","isOpen","title","children","Form","onSubmit","e","preventDefault","value","buttonValue","PopupWithForm","EditProfilePopup","useState","username","setUsername","description","setDescription","thisUser","useEffect","onUpdateUser","placeholder","required","minLength","maxLength","onChange","target","EditAvatarPopup","avatarInputRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","cardNameInputRef","cardLinkInputRef","Login","email","setEmail","password","setPassword","onSignIn","Register","onRegister","to","ProtectedRoute","Component","component","BASE_URL","_checkResponse","status","InfoToolTip","successImage","errorImage","App","currentUser","setCurrentUser","setLoggedIn","setUserEmail","token","localStorage","getItem","auth","data","console","log","catch","err","error","tokenCheck","setCards","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isAuthPopupOpen","setIsAuthPopupOpen","handleAuthPopupOpen","selectedCard","setSelectedCard","closeAllPopups","Provider","removeItem","exact","path","changeLikeCardStatus","newCard","newCards","c","deleteCard","cardForDeleting","cardsWithoutACard","filter","setItem","editProfile","changeAvatar","addNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e07e954.chunk.js","sourcesContent":["import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nfunction Header(props) {\n\n  const history = useHistory();\n  const location = useLocation();\n\n  // ! определяем, какой текст будет отображаться на кнопке\n  let buttonText = 'Войти';\n\n  if (location.pathname === '/sign-in') {\n    buttonText = 'Регистрация'\n  }\n\n  // ! функция для перехода к экрану регистрации, ее передаем кнопке в зависимости от условия\n  function goToSignUp() {\n    history.push('/sign-up');\n  }\n\n  // ! функция для перехода к экрану входа, ее передаем кнопке в зависимости от условия\n  function goToSignIn() {\n    history.push('/sign-in');\n  }\n\n  //! определяем, какая функция будет вызываться по клику на кнопку\n  function setButtonAction() {\n    if (location.pathname === '/sign-in') {\n      goToSignUp();\n    } else {\n      goToSignIn();\n    }\n  }\n\n  // ? вот так не работает, если второй if стоит. работает только так, как выше - с else. почему?\n  // function setButtonAction() {\n  //   if (history.location.pathname === '/sign-in') {\n  //     goToSignUp();\n  //   } if (history.location.pathname === '/sign-up') {\n  //     goToSignIn();\n  //   }\n  // }\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo\"></div>\n      <div className=\"header__auth\">\n        <p className=\"header__user-email\">{props.userEmail}</p>\n        <button onClick={props.loggedIn ? props.onSignOut : setButtonAction} className=\"header__button\" >{props.loggedIn ? 'Выйти!' : buttonText}</button>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/pencil.8667ac4a.svg\";","export default __webpack_public_path__ + \"static/media/plus.d86bb2ed.svg\";","import React from 'react';\n\nconst CurrentUserContext = React.createContext('CurrentUserContext');\n\nexport default CurrentUserContext;","import React from 'react';\n// import cousteau from '../images/cousteau.jpg';\nimport pencil from '../images/pencil.svg';\nimport plus from '../images/plus.svg';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\n\nfunction Profile(props) {\n\n  // ! Подписываем компонент Profile на контекст\n  const { name, about, avatar } = React.useContext(CurrentUserContext);\n\n  return (\n    <section className=\"profile\">\n\n      <div className=\"profile__avatar\">\n        <button\n          className=\"profile__avatar-button\"\n          onClick={props.onEditAvatar}\n        >\n          <img\n            src={pencil}\n            alt=\"карандаш\"\n            className=\"profile__avatar-pencil\"\n          />\n        </button>\n        <img\n          src={avatar}\n          alt=\"Аватар пользователя\"\n          className=\"profile__avatar-image\" />\n      </div>\n\n      <h1 className=\"profile__name\">{ name }</h1>\n      <p className=\"profile__regalia\">{ about }</p>\n\n      <button\n        className=\"profile__edit-button\"\n        onClick={props.onEditProfile}\n      >\n        <img\n          src={pencil}\n          alt=\"карандаш\"\n          className=\"profile__pencil\"\n        />\n      </button>\n\n      <button\n        className=\"profile__add-button\"\n        onClick={props.onAddPlace}\n      >\n        <img\n          src={plus}\n          alt=\"плюс\"\n          className=\"profile__plus\"\n        />\n      </button>\n\n    </section>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n\n  // ! подписываем компонент Card на контекст\n  const { _id } = React.useContext(CurrentUserContext);\n  // debugger;\n  const isOwn = props.card.owner._id === _id;\n\n  const cardDeleteButtonClassName = (`card__delete-card ${isOwn ? '' : 'card__delete-card_invisible'}`);\n\n  const isLiked = props.card.likes.some(i => i._id === _id);\n\n  const cardLikeButtonClassName = (`card__like-button ${isLiked ? 'card__like-button_active' : ''}`); \n\n  function handleClick() {\n    props.onCardClick(props.card);\n  } \n\n  return (\n    <div className=\"card\">\n      <img\n        src={props.card.link}\n        alt={props.card.name}\n        className=\"card__img\" onClick={() => handleClick(props.card.link)} />\n      <button className={cardDeleteButtonClassName} onClick={props.onCardDelete}></button>\n      <div className=\"card__name\">\n        <h2 className=\"card__title\">{props.card.name}</h2>\n        <div className=\"card__like\">\n          <button className={cardLikeButtonClassName} onClick={props.onLikeClick}></button>\n          <p className=\"card__like-scope\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nfunction Cards(props) {\n\n  return (\n    <section className=\"cards\" >\n      {props.cards.map(card => {\n\n        return (\n\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={props.onCardClick}\n            onLikeClick={() => props.onCardLike(card)}\n            onCardDelete={() => props.onCardDelete(card)}\n          />\n        );\n      })}\n    </section>\n  );\n}\n\nexport default Cards;","import React from 'react';\nimport Profile from './Profile';\nimport Cards from './Cards';\n\nfunction Main(props) {\n\n  return (\n    <main className=\"main\">\n      <Profile\n        onEditProfile={props.onEditProfile}\n        onAddPlace={props.onAddPlace}\n        onEditAvatar={props.onEditAvatar}\n      />\n      <Cards\n        onCardClick={props.onCardClick}\n        cards={props.cards}\n        onCardLike={props.onCardLike}\n        onCardDelete={props.onCardDelete}\n      />\n    </main>\n  );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__info\">&copy;\t 2020-2021 Mesto Russia. Dev: Victor Smeyukha</p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithImage(props) {\n\n  return (\n    <div className={`photo-popup ${props.card ? 'popup_opened' : ''}`}>\n      <figure className=\"photo-popup__container\">\n        <button className=\"popup__close-button popup__close-button_type_photo-popup\" type=\"button\" onClick={props.onClose}></button>\n        <img src={props.card?.link} alt={props.card?.name} className=\"photo-popup__image\" />\n        <figcaption className=\"photo-popup__caption\">{props.card?.name}</figcaption>\n      </figure>\n    </div>\n  )\n}\n\nexport default PopupWithImage;","class Api {\n  constructor(apiKey, baseUrl) {\n    this.headers = {\n      authorization: apiKey\n    };\n    this.baseUrl = baseUrl\n  }\n\n  _getResponseData(url, method, headers, body) {\n    return fetch(url, {\n      method: method,\n      headers: headers,\n      body: body\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json();  \n        } else {\n          return Promise.reject();\n        }\n      });\n  }\n\n  getInitialCards() {\n    return this._getResponseData(`${this.baseUrl}/cards`, 'GET', this.headers);\n  }\n\n  addNewCard(obj) {\n    return this._getResponseData(`${this.baseUrl}/cards`, 'POST', { ...this.headers, 'Content-Type': 'application/json' }, JSON.stringify(obj));\n  }\n\n  deleteCard(id) {\n    return this._getResponseData(`${this.baseUrl}/cards/${id}`, 'DELETE', this.headers);\n  }\n\n  getUserInfo() {\n    return this._getResponseData(`${this.baseUrl}/users/me`, 'GET', this.headers);\n  }\n  \n  getAllNeededData() {\n    return Promise.all([this.getUserInfo(), this.getInitialCards()]);\n  }\n\n  editProfile(obj) {\n    return this._getResponseData(`${this.baseUrl}/users/me`, 'PATCH', { ...this.headers, 'Content-Type': 'application/json' }, JSON.stringify(obj));\n  }\n\n  changeAvatar(obj) {\n    return this._getResponseData(`${this.baseUrl}/users/me/avatar`, 'PATCH', { ...this.headers, 'Content-Type': 'application/json' }, JSON.stringify(obj));\n  }\n\n  addALike(id) {\n    return this._getResponseData(`${this.baseUrl}/cards/likes/${id}`, 'PUT', this.headers);\n  }\n\n  deleteLike(id) {\n    return this._getResponseData(`${this.baseUrl}/cards/likes/${id}`, 'DELETE', this.headers);\n  }\n\n  changeLikeCardStatus(id, isLiked) {\n    if (isLiked) {\n      return this.addALike(id);\n    }\n    else {\n      return this.deleteLike(id);\n    }\n\n  }\n}\n\nconst api = new Api('2dbd0122-ea43-4557-862d-f5c5a66a918e', 'https://mesto.nomoreparties.co/v1/cohort-18');\nexport default api;","import React from 'react';\n\n// function PopupWithForm(props) {\n\n//   return (\n//     <div className={\n//       `popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`\n//     }>\n      \n//       <div className=\"popup__container\">\n//         <button className=\"popup__close-button popup__close-button_type_popup-with-forms\" type=\"button\" onClick={props.onClose}></button>\n//         <h3 className=\"popup__title\">{props.title}</h3>\n//         <form className={`popup__form popup__form_type_${props.name}`} name={props.name} noValidate onSubmit={props.onSubmit}>\n//             <fieldset className={`popup__fieldset popup__fieldset_type_${props.name}`}>\n//               {props.children}\n//             </fieldset>\n//             <button type=\"submit\" className=\"popup__submit\" value=\"Сохранить\" name=\"submit\">Сохранить</button>\n//           </form>\n//       </div>\n\n//     </div>\n//   );\n// }\n\nfunction Popup(props) {\n\n  return (\n    <div className={\n      `popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`\n    }>\n      \n      <div className=\"popup__container\">\n        <button className=\"popup__close-button popup__close-button_type_popup-with-forms\" type=\"button\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n      </div>\n\n    </div>\n  );\n}\n\nexport default Popup;","import React from 'react';\n\nfunction Form(props) {\n\n\n  // todo это попозже раскомментировать, когда все обработчики будут портированы в App.js\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onSubmit();\n  }\n  \n  return (\n    <form\n      className={`form form_type_${props.type}`}\n      name={props.name}\n      onSubmit={handleSubmit}>\n      \n      <fieldset className={`form__fieldset form__fieldset_type_${props.type}`}>\n        {props.children}\n      </fieldset>\n      \n      <button\n        type=\"submit\"\n        className={`form__submit form__submit_type_${props.type}`}\n        value={props.buttonValue}\n        name=\"submit\">\n        {props.buttonValue}\n      </button>\n      \n    </form>\n  )\n}\n\nexport default Form;","import React from 'react';\nimport Popup from './Popup';\nimport Form from './Form';\n\nfunction PopupWithForm(props) {\n  return (\n    <Popup\n      name={props.name}\n      isOpen={props.isOpen}\n      title={props.title}\n      onClose={props.onClose}\n    >\n      <Form\n        onSubmit={props.onSubmit}\n        type=\"popup\"\n        buttonValue={props.buttonValue}\n      >\n        {props.children}\n      </Form>\n    </Popup>\n  )\n\n}\n\nexport default PopupWithForm;\n\n// return (\n//   <Popup \n//     name={props.name}\n//     isOpen={props.isOpen}\n//     title={props.title}>\n//     onClose={props.onClose}\n//   >\n//       <Form\n//         onSubmit={props.handleSubmit}>\n//         {props.children}\n//       </Form>\n//   </Popup>\n\n\n// );","import React from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup(props) {\n\n  // ! объявляем стейт-переменные, которые будут привязаны к полям ввода формы и сделают их управляемыми\n  const [username, setUsername] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  const thisUser = React.useContext(CurrentUserContext);\n  \n  React.useEffect(() => {\n    setUsername(thisUser.name);\n    setDescription(thisUser.about);\n  }, [thisUser]);\n\n  // ! функция изменения значения инпута имени\n  function handleUsernameChange(e) {\n    setUsername(e.target.value);\n  }\n\n  // ! функция изменения значения инпута описания\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  // ! функция сабмита формы\n  function handleSubmit() {\n\n    // ! Передаём значения управляемых компонентов во внешний обработчик\n    props.onUpdateUser({\n      name: username,\n      about: description,\n    });\n  }\n\n  // return (\n  //   <Popup\n  //     title=\"Как звать-то тебя?\"\n  //     name=\"user-info\"\n  //     isOpen={props.isOpen}\n  //     onClose={props.onClose}\n  //     onSubmit={handleSubmit}\n  //   >\n  //     <input\n  //       type=\"text\"\n  //       className=\"popup__input popup__input_type_name\"\n  //       placeholder=\"Имя\"\n  //       name=\"user-name\"\n  //       required\n  //       minLength=\"2\"\n  //       maxLength=\"40\"\n  //       id=\"user-name\"\n  //       value={username}\n  //       onChange={handleUsernameChange}\n  //     />\n  //     <span className=\"popup__input-error\" id=\"user-name-error\"></span>\n  //     <input\n  //       type=\"text\"\n  //       className=\"popup__input popup__input_type_regalia\"\n  //       placeholder=\"Род деятельности\"\n  //       name=\"user-regalia\"\n  //       required\n  //       minLength=\"2\"\n  //       maxLength=\"200\"\n  //       id=\"user-regalia\"\n  //       value={description}\n  //       onChange={handleDescriptionChange}\n  //     />\n  //     <span className=\"popup__input-error\" id=\"user-regalia-error\"></span>\n  //   </Popup>\n  // )\n\n\n  return (\n    <PopupWithForm\n      title=\"What is your name?\"\n      name=\"user-info\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      buttonValue=\"Set user info\"\n    >\n      <input\n        type=\"text\"\n        className=\"form__input form__input_type_popup\"\n        placeholder=\"Имя\"\n        name=\"user-name\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        id=\"user-name\"\n        value={username}\n        onChange={handleUsernameChange}\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"user-name-error\"\n      ></span>\n      <input\n        type=\"text\"\n        className=\"form__input form__input_type_popup\"\n        placeholder=\"Род деятельности\"\n        name=\"user-regalia\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        id=\"user-regalia\"\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"user-regalia-error\"\n      ></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n\n\n// {/* <Popup\n// title=\"Как звать-то тебя?\"\n// name=\"user-info\"\n// isOpen={props.isOpen}\n// onClose={props.onClose}\n// >\n// <Form\n//   onSubmit={handleSubmit}\n//   type=\"popup\"\n//   buttonValue=\"Задать данные профиля\"\n// >\n\n// </Form>\n// </Popup> */}","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n\n  const avatarInputRef = React.useRef('');\n\n  function handleSubmit() {\n    // e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarInputRef.current.value\n    })\n  }\n  \nreturn (\n  <PopupWithForm\n    title=\"Change ava\"\n    name=\"change-avatar\"\n    isOpen={props.isOpen}\n    onClose={props.onClose}\n    onSubmit={handleSubmit}\n    buttonValue=\"Change ava\"\n  >\n    <input\n      type=\"url\"\n      className=\"form__input form__input_type_popup\"\n      placeholder=\"Ссылка на аву\"\n      name=\"avatar-link\"\n      required\n      id=\"avatar-link\"\n      ref={avatarInputRef}\n    />\n    <span\n      className=\"popup__input-error\"\n      id=\"avatar-link-error\">\n    </span>\n  </PopupWithForm>\n);\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n  const cardNameInputRef = React.useRef('');\n  const cardLinkInputRef = React.useRef('');\n\n  function handleSubmit() {\n\n    props.onAddPlace({\n      name: cardNameInputRef.current.value,\n      link: cardLinkInputRef.current.value\n    });\n  }\n\n  // return (\n  //   <Popup\n  //     title=\"Новое место\"\n  //     name=\"add-new-card\"\n  //     isOpen={props.isOpen}\n  //     onClose={props.onClose}\n  //     onSubmit={handleSubmit}\n  //   >\n  //     <input\n  //       type=\"text\"\n  //       className=\"popup__input popup__input_type_card-title\"\n  //       placeholder=\"Название картинки\"\n  //       name=\"card-title\"\n  //       required\n  //       maxLength=\"30\"\n  //       id=\"card-title\"\n  //       ref={cardNameInputRef}\n  //     />\n  //     <span\n  //       className=\"popup__input-error\"\n  //       id=\"card-title-error\">\n  //     </span>\n  //     <input\n  //       type=\"url\"\n  //       className=\"popup__input popup__input_type_card-link\"\n  //       placeholder=\"Ссылка на картинку\"\n  //       name=\"card-link\"\n  //       required\n  //       id=\"card-link\"\n  //       ref={cardLinkInputRef}\n  //     />\n  //     <span\n  //       className=\"popup__input-error\"\n  //       id=\"card-link-error\">\n  //     </span>\n  //   </Popup>\n  // )\n\n\n  return (\n    <PopupWithForm\n      title=\"New place\"\n      name=\"add-new-card\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n      buttonValue=\"Add place\"\n    >\n      <input\n        type=\"text\"\n        className=\"form__input form__input_type_popup\"\n        placeholder=\"Название картинки\"\n        name=\"card-title\"\n        required\n        maxLength=\"30\"\n        id=\"card-title\"\n        ref={cardNameInputRef}\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"card-title-error\">\n      </span>\n      <input\n        type=\"url\"\n        className=\"form__input form__input_type_popup\"\n        placeholder=\"Ссылка на картинку\"\n        name=\"card-link\"\n        required\n        id=\"card-link\"\n        ref={cardLinkInputRef}\n      />\n      <span\n        className=\"popup__input-error\"\n        id=\"card-link-error\">\n      </span>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;","import React from 'react';\nimport Form from './Form';\n\nfunction Login(props) {\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleEmailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  function handleSubmit() {\n    props.onSignIn(email, password);\n  }\n\n  return (\n    <div className=\"form__container\" >\n      <h3 className=\"form__title\" >Вход</h3>\n      <Form\n        name=\"sign-in\"\n        type=\"auth\"\n        buttonValue=\"Войти\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"email\"\n          className=\"form__input form__input_type_auth\"\n          placeholder=\"Email\"\n          name=\"email\"\n          required\n          minLength=\"5\"\n          maxLength=\"40\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <span\n          className=\"popup__input-error\"\n          id=\"user-name-error\"></span>\n        <input\n          type=\"password\"\n          className=\"form__input form__input_type_auth\"\n          placeholder=\"Пароль\"\n          name=\"password\"\n          required\n          minLength=\"5\"\n          maxLength=\"40\"\n          id=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <span\n          className=\"popup__input-error\"\n          id=\"user-regalia-error\"></span>\n      </Form>\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport Form from './Form';\nimport { Link } from 'react-router-dom';\n\nfunction Register(props) {\n\n  // ! переменные состояния для инпутов\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  // ! записываем то, что ввел пользователь в поле емэйла, в соответствующую переменную состояния\n  function handleEmailChange(e) {\n    setEmail(e.target.value);\n  }\n\n  // ! записываем то, что ввел пользователь в поле пароля, в соответствующую переменную состояния\n  function handlePasswordChange(e) {\n    setPassword(e.target.value);\n  }\n\n  // ! что происходит при клике по кнопке сабмита формы. отправляем запрос на сервер и в случае успеха переадресовываем пользователя на страницу входа. логика регистрации и входа - в файле Auth\n  function handleSubmit() {\n    props.onRegister(email, password);\n  }\n\n\n\n  return (\n    <div className=\"form__container\" >\n      <h3 className=\"form__title\" >Регистрация</h3>\n      <Form\n        name=\"sign-up\"\n        type=\"auth\"\n        buttonValue=\"Зарегистрироваться\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"email\"\n          className=\"form__input form__input_type_auth\"\n          placeholder=\"Email\"\n          name=\"email\"\n          required\n          minLength=\"5\"\n          maxLength=\"40\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmailChange}\n        />\n        <span\n          className=\"popup__input-error\"\n          id=\"user-name-error\"></span>\n        <input\n          type=\"password\"\n          className=\"form__input form__input_type_auth\"\n          placeholder=\"Пароль\"\n          name=\"password\"\n          required\n          id=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n        <span\n          className=\"popup__input-error\"\n          id=\"user-regalia-error\"></span>\n      </Form>\n      <p>Уже зарегистрированы? <Link to=\"/sign-in\">Войти</Link></p>\n\n    </div>\n  );\n}\n\nexport default Register;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {() =>\n        props.loggedIn ? <Component {...props} /> : <Redirect to=\"/sign-in\" />\n      }\n    </Route>\n  );\n};\n\nexport default ProtectedRoute;","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nfunction _checkResponse(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n  .then(_checkResponse);\n};\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password })\n  })\n    .then(_checkResponse);\n};\n\nexport const getUserData = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  })\n  .then(_checkResponse);\n};","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/error.df8eddf6.svg\";","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Popup from './Popup';\nimport successImage from '../images/success.svg';\nimport errorImage from '../images/error.svg';\n\nfunction InfoToolTip(props) {\n\n  const history = useHistory();\n  const location = history.location.pathname;\n\n  return (\n    <Popup name=\"auth-popup\" title=\"\" isOpen={props.isOpen} onClose={props.onClose} >\n      <div className=\"popup__auth-container\">\n        <img className=\"popup__auth-img\" src={(location === '/sign-in') ? successImage : errorImage} alt=\"Статус регистрации\" />\n        <h3 className=\"popup__title\">{(location === '/sign-in') ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так!\"}</h3>\n      </div>\n    </Popup>\n  )\n}\n\nexport default InfoToolTip;","import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithImage from './PopupWithImage';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport * as auth from '../utils/auth';\nimport InfoToolTip from './InfoToolTip';\n\nfunction App() {\n\n  // ! создаем переменную состояния для задания контекста\n  const [currentUser, setCurrentUser] = React.useState({\n    name: '',\n    about: '',\n    avatar: '',\n    _id: ''\n  });\n\n  //! создаем переменную состояния для отслеживания, залогинен ли пользователь. в зависимости от того, true или false, будет обеспечен или не обеспечен доступ на главную страницу\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n// ! создаем переменную состояния, в которой хранится емэйл пользователя. впоследствии он будет передаваться пропсом в хедер для отображения\n  const [userEmail, setUserEmail] = React.useState('');\n\n  const history = useHistory();\n\n  // ! функция, которая меняет флажок залогина\n  function handleLogin() {\n    setLoggedIn(true);\n  }\n\n  // ! обработчик регистрации, передадим его в компонент Register\n  function handleRegistration(email, password) {\n    auth.register(email, password)\n    .then((res) => {\n      if (res) {\n        console.log(res);\n        history.push('/sign-in');\n        handleAuthPopupOpen();\n      } else {\n        return;\n      }\n    })\n    .catch((err) => {\n      handleAuthPopupOpen();\n      console.error(err);\n    });\n  }\n\n  function handleSignIn(email, password) {\n    auth.authorize(email, password)\n    .then((res) => {\n      if (res.token) {\n        console.log(res);\n        localStorage.setItem('token', res.token);\n        handleLogin();\n        setUserEmail(email);\n        history.push('/');\n        return res;\n      } else {\n        console.log('что-то пошло не так');\n        return;\n      }\n    })\n    .catch((err) => console.error(err));\n  }\n\n  // ! обработчик разлогина. ниже мы передаем его пропсом в компонент Header\n  function signOut() {\n    localStorage.removeItem('token');\n    setLoggedIn(false);\n    setUserEmail('');\n    history.push('/sign-in');\n  }\n\n  // ! проверяем, есть ли в хранилище токен. если есть, то меняем стейт-переменную loggedIn с false на true и открываем для пользователя главную страницу. этот эффект нужен для повторного входа пользователя, чтобы он не вводил при входе логин и пароль каждый раз, а заходил беспрепятственно, если он ранее залогинился. \n  React.useEffect(() => {\n    function tokenCheck() {\n      const token = localStorage.getItem('token');\n\n      if (token) {\n        auth.getUserData(token)\n        .then((data) => {\n          if (data) {\n            console.log(data);\n            console.log(loggedIn);\n\n            setLoggedIn(true);\n            \n            const email = data.data.email;\n            \n            console.log(email);\n            \n            setUserEmail(email);\n            \n            history.push('/');\n          } else {\n            console.log('не пришли данные о юзере');\n          }\n        })\n        .catch(err => console.error(err));\n      }\n    };\n\n    // ! вызывать токенчек только когда пользоваетль не залогинен \n    if (!loggedIn) {\n      tokenCheck();\n    } return;\n  }, [loggedIn, history]);\n\n  // ! используем эффект, чтобы загрузить с сервера первоначальные данные юзера и записать хи в currentUser\n  React.useEffect(() => {\n    api.getUserInfo()\n      .then(data => {\n        setCurrentUser(data);\n      })\n      .catch(err => console.error(`Ошибка при получении данных профиля: ${err}`))\n  }, []);\n\n    // ! объявляем переменную состояния, в которую будет приходить массив карточек\n    const [cards, setCards] = React.useState([]);\n\n    // ! при монтировании элемента в переменную cards из API приходит массив карточек\n    React.useEffect(() => {\n      api.getInitialCards()\n        .then(data => {\n          setCards(data);\n        })\n        .catch(err => console.error(`Ошибочка вышла - ${err}`));\n    }, []);\n  \n    // ! объявляем функцию лайка/отзыва лайка\n    function handleCardLike(card) {\n\n      // ! Снова проверяем, есть ли уже лайк на этой карточке\n      const isLiked = card.likes.some(i => i._id === currentUser._id);\n      \n      // ! Отправляем запрос в API и получаем обновлённые данные карточки\n      api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          // ! Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n          const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n          setCards(newCards);\n        })\n        .catch(err => console.error(`Ошибка добавления лайка: ${err}`))\n    }\n  \n    function handleCardDelete(card) {\n      api.deleteCard(card._id)\n        .then((cardForDeleting) => {\n          const cardsWithoutACard = cards.filter((c) => {\n            if (c._id !== card._id) {\n              return c;\n            }\n          })\n          setCards(cardsWithoutACard);\n        })\n        .catch(err => console.error(`Ошибка удаления карточки: ${err}`))\n    }\n\n  // ! создаем переменные состояния для открытия попапов - с формой и без\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isAuthPopupOpen, setIsAuthPopupOpen] = React.useState(false);\n\n  // ! пишем функции изменения состояния переменных для открытия попапов с формой\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleAuthPopupOpen() {\n    setIsAuthPopupOpen(true);\n  }\n\n  // ! создаем переменную состояния для открытия фотки\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  // ! пишем функцию изменения состояния переменной для открытия попапа с фото\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  // ! пишем функцию закрытия попапа\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard(null);\n    setIsAuthPopupOpen(false);\n  }\n\n  // ! функция обновления данных профиля\n  function handleUpdateUser(currentUser) {\n    api.editProfile(currentUser)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.error(`Ошибка при редактировании данных профиля: ${err}`));\n  }\n\n  function handleUpdateAvatar(currentUser) {\n    api.changeAvatar(currentUser)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.error(`Ошибка при редактировании аватара: ${err}`));\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.addNewCard(card)\n      .then(data => {\n        setCards([data, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.error(`Ошибка при добавлении изображения: ${err}`));\n  }\n\n  return (\n    // ! оборачиваем все приложение в провайдер контекста\n    <CurrentUserContext.Provider value={currentUser}>\n\n      <div className=\"page\">\n      \n        <div className=\"page__content\">\n      \n          <Header userEmail={userEmail} loggedIn={loggedIn} onSignOut={signOut} />\n\n          <Switch>\n\n            <ProtectedRoute\n              exact\n              path=\"/\"\n              loggedIn={loggedIn}\n              component={Main}\n\n              // ? ниже пропсы компонента Main\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onCardClick={handleCardClick}\n              cards={cards}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n            />\n\n            {/* <Route exact path=\"/\" >\n              {!loggedIn ?\n                <Redirect to=\"/sign-in\" /> :\n                <Main\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  cards={cards}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                />\n              }\n\n            </Route> */}\n\n            <Route path=\"/sign-up\">\n              <Register onRegister={handleRegistration} />\n            </Route>\n\n            <Route path=\"/sign-in\">\n              <Login onSignIn={handleSignIn} />\n            </Route>\n            \n            </Switch>\n\n          <Footer />\n                \n          {/* попап редактирования профиля */}\n\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n\n          {/* попап редактирования аватара */}\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          {/* попап добавления новой карточки */}\n\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n          />\n\n          <InfoToolTip\n            isOpen={isAuthPopupOpen}\n            onClose={closeAllPopups}\n          />\n\n          {/* попап с картинкой */}\n            <PopupWithImage\n              card={selectedCard}\n              onClose={closeAllPopups}\n            />\n\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}